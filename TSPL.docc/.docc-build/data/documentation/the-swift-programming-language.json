{"topicSections":[{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"],"title":"Welcome to Swift"},{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"],"title":"Language Guide"},{"title":"Language Reference","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar"]},{"title":"Revision History","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory"]}],"metadata":{"title":"The Swift Programming Language (5.9)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language","interfaceLanguage":"swift"},"sections":[],"references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"url":"\/documentation\/the-swift-programming-language\/errorhandling","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","type":"topic","role":"article","abstract":[{"type":"text","text":"Respond to and recover from errors."}],"title":"Error Handling"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","role":"article","abstract":[{"text":"Model custom types that define a list of possible values.","type":"text"}],"kind":"article","url":"\/documentation\/the-swift-programming-language\/enumerations","type":"topic","title":"Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Extensions":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","kind":"article","type":"topic","abstract":[{"text":"Add functionality to an existing type.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/extensions","title":"Extensions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"url":"\/documentation\/the-swift-programming-language\/macros","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","type":"topic","role":"article","abstract":[{"type":"text","text":"Use macros to generate code at compile time."}],"title":"Macros"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators":{"url":"\/documentation\/the-swift-programming-language\/basicoperators","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","type":"topic","role":"article","abstract":[{"type":"text","text":"Perform operations like assignment, arithmetic, and comparison."}],"title":"Basic Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","type":"topic","role":"article","abstract":[{"type":"text","text":"Generalize declarations to abstract away concrete types."}],"title":"Generic Parameters and Arguments"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","type":"topic","role":"article","abstract":[{"type":"text","text":"Use the lowest-level components of the syntax."}],"title":"Lexical Structure"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"url":"\/documentation\/the-swift-programming-language\/thebasics","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","type":"topic","role":"article","abstract":[{"type":"text","text":"Work with common kinds of data and write basic syntax."}],"title":"The Basics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Methods":{"abstract":[{"text":"Define and call functions that are part of an instance or type.","type":"text"}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods","role":"article","title":"Methods","type":"topic","url":"\/documentation\/the-swift-programming-language\/methods"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"url":"\/documentation\/the-swift-programming-language\/types","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"topic","role":"article","abstract":[{"type":"text","text":"Use built-in named and compound types."}],"title":"Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/SummaryOfTheGrammar":{"url":"\/documentation\/the-swift-programming-language\/summaryofthegrammar","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar","type":"topic","role":"article","abstract":[{"type":"text","text":"Read the whole formal grammar."}],"title":"Summary of the Grammar"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"role":"article","url":"\/documentation\/the-swift-programming-language\/patterns","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","abstract":[{"type":"text","text":"Match and destructure values."}],"type":"topic","kind":"article","title":"Patterns"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"kind":"article","abstract":[{"type":"text","text":"Structure your code to avoid conflicts when accessing memory."}],"type":"topic","title":"Memory Safety","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","role":"article","url":"\/documentation\/the-swift-programming-language\/memorysafety"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"title":"Attributes","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","abstract":[{"text":"Add information to declarations and types.","type":"text"}],"url":"\/documentation\/the-swift-programming-language\/attributes","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ClassesAndStructures":{"url":"\/documentation\/the-swift-programming-language\/classesandstructures","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","type":"topic","role":"article","abstract":[{"type":"text","text":"Model custom types that encapsulate data."}],"title":"Structures and Classes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/RevisionHistory":{"url":"\/documentation\/the-swift-programming-language\/revisionhistory","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory","type":"topic","role":"article","abstract":[{"type":"text","text":"Review the recent changes to this book."}],"title":"Document Revision History"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/NestedTypes":{"url":"\/documentation\/the-swift-programming-language\/nestedtypes","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes","type":"topic","role":"article","abstract":[{"type":"text","text":"Define types inside the scope of another type."}],"title":"Nested Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures":{"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures","type":"topic","abstract":[{"type":"text","text":"Group code that executes together, without creating a named function."}],"title":"Closures","url":"\/documentation\/the-swift-programming-language\/closures","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","kind":"article","type":"topic","abstract":[{"type":"text","text":"Structure code with branches, loops, and early exits."}],"title":"Control Flow","url":"\/documentation\/the-swift-programming-language\/controlflow","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","type":"topic","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting","kind":"article","abstract":[{"text":"Model the lifetime of objects and their relationships.","type":"text"}],"title":"Automatic Reference Counting"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"url":"\/documentation\/the-swift-programming-language\/accesscontrol","type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","abstract":[{"text":"Manage the visibility of code by declaration, file, and module.","type":"text"}],"title":"Access Control","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","kind":"article","type":"topic","abstract":[{"type":"text","text":"Access members of an optional value without unwrapping."}],"title":"Optional Chaining","url":"\/documentation\/the-swift-programming-language\/optionalchaining","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"abstract":[{"type":"text","text":"Define and call functions, label their arguments, and use their return values."}],"kind":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions","title":"Functions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"abstract":[{"text":"Set the initial values for a type’s stored properties and perform one-time setup.","type":"text"}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","role":"article","title":"Initialization","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutSwift":{"abstract":[{"type":"text","text":"Understand the high-level goals of the language."}],"kind":"article","type":"topic","title":"About Swift","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift","url":"\/documentation\/the-swift-programming-language\/aboutswift","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","kind":"article","role":"article","title":"Advanced Operators","abstract":[{"type":"text","text":"Define custom operators, perform bitwise operations, and use builder syntax."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","kind":"article","title":"Protocols","abstract":[{"text":"Define requirements that conforming types must implement.","type":"text"}],"url":"\/documentation\/the-swift-programming-language\/protocols","type":"topic","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","kind":"article","role":"article","title":"Declarations","abstract":[{"type":"text","text":"Introduce types, operators, variables, and other names and constructs."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Deinitialization":{"abstract":[{"text":"Release resources that require custom cleanup.","type":"text"}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","role":"article","title":"Deinitialization","type":"topic","url":"\/documentation\/the-swift-programming-language\/deinitialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","role":"article","abstract":[{"text":"Write code that works for multiple types and specify requirements for those types.","type":"text"}],"kind":"article","url":"\/documentation\/the-swift-programming-language\/generics","type":"topic","title":"Generics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"title":"Inheritance","url":"\/documentation\/the-swift-programming-language\/inheritance","abstract":[{"text":"Subclass to add or override functionality.","type":"text"}],"role":"article","kind":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/opaquetypes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","kind":"article","role":"article","title":"Opaque and Boxed Types","abstract":[{"type":"text","text":"Hide implementation details about a value’s type."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Compatibility":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/compatibility","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility","kind":"article","role":"article","title":"Version Compatibility","abstract":[{"type":"text","text":"Learn what functionality is available in older language modes."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","kind":"article","role":"article","title":"Collection Types","abstract":[{"type":"text","text":"Organize data using arrays, sets, and dictionaries."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting":{"role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","type":"topic","abstract":[{"text":"Determine a value’s runtime type and give it more specific type information.","type":"text"}],"url":"\/documentation\/the-swift-programming-language\/typecasting","kind":"article","title":"Type Casting"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","abstract":[{"text":"Access the elements of a collection.","type":"text"}],"role":"article","url":"\/documentation\/the-swift-programming-language\/subscripts","title":"Subscripts","type":"topic","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties":{"title":"Properties","kind":"article","type":"topic","role":"article","abstract":[{"text":"Access stored and computed values that are part of an instance or type.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","url":"\/documentation\/the-swift-programming-language\/properties"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","kind":"article","role":"article","title":"Expressions","abstract":[{"type":"text","text":"Access, modify, and assign values."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"title":"Strings and Characters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","abstract":[{"type":"text","text":"Store and manipulate text."}],"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","type":"topic","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"title":"A Swift Tour","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","abstract":[{"type":"text","text":"Explore the features and syntax of Swift."}],"url":"\/documentation\/the-swift-programming-language\/guidedtour","type":"topic","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"title":"Statements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","abstract":[{"type":"text","text":"Group expressions and control the flow of execution."}],"url":"\/documentation\/the-swift-programming-language\/statements","type":"topic","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"title":"Concurrency","kind":"article","type":"topic","role":"article","abstract":[{"text":"Perform asynchronous operations.","type":"text"}],"url":"\/documentation\/the-swift-programming-language\/concurrency","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutTheLanguageReference":{"title":"About the Language Reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference","abstract":[{"type":"text","text":"Read the notation that the formal grammar uses."}],"url":"\/documentation\/the-swift-programming-language\/aboutthelanguagereference","type":"topic","kind":"article","role":"article"}}}