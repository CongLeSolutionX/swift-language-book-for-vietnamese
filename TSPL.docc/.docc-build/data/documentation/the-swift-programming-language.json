{"topicSections":[{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"],"title":"Welcome to Swift"},{"title":"Language Guide","identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"]},{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar"],"title":"Language Reference"},{"identifiers":["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory"],"title":"Revision History"}],"hierarchy":{"paths":[[]]},"sections":[],"kind":"article","metadata":{"title":"The Swift Programming Language (5.9)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"abstract":[{"text":"Match and destructure values.","type":"text"}],"title":"Patterns","kind":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/patterns","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"url":"\/documentation\/the-swift-programming-language\/macros","abstract":[{"text":"Use macros to generate code at compile time.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Macros","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Compatibility":{"url":"\/documentation\/the-swift-programming-language\/compatibility","abstract":[{"type":"text","text":"Tìm hiểu những chức năng nào có sẵn trong các chế độ ngôn ngữ cũ hơn."}],"role":"article","kind":"article","type":"topic","title":"Khả năng Tương Thích Phiên Bản","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Compatibility"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/RevisionHistory":{"url":"\/documentation\/the-swift-programming-language\/revisionhistory","abstract":[{"text":"Review the recent changes to this book.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Document Revision History","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting":{"abstract":[{"type":"text","text":"Determine a value’s runtime type and give it more specific type information."}],"type":"topic","title":"Type Casting","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting","url":"\/documentation\/the-swift-programming-language\/typecasting","role":"article","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"url":"\/documentation\/the-swift-programming-language\/statements","abstract":[{"type":"text","text":"Group expressions and control the flow of execution."}],"role":"article","kind":"article","type":"topic","title":"Statements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"url":"\/documentation\/the-swift-programming-language\/types","abstract":[{"text":"Use built-in named and compound types.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"abstract":[{"type":"text","text":"Structure code with branches, loops, and early exits."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","kind":"article","title":"Control Flow"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures":{"url":"\/documentation\/the-swift-programming-language\/closures","abstract":[{"type":"text","text":"Group code that executes together, without creating a named function."}],"role":"article","type":"topic","kind":"article","title":"Closures","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"kind":"article","url":"\/documentation\/the-swift-programming-language\/protocols","abstract":[{"type":"text","text":"Define requirements that conforming types must implement."}],"title":"Protocols","type":"topic","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Methods":{"role":"article","type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Methods","abstract":[{"text":"Define and call functions that are part of an instance or type.","type":"text"}],"title":"Methods","url":"\/documentation\/the-swift-programming-language\/methods"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"type":"topic","role":"article","abstract":[{"type":"text","text":"Subclass to add or override functionality."}],"title":"Inheritance","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance","kind":"article","url":"\/documentation\/the-swift-programming-language\/inheritance"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"url":"\/documentation\/the-swift-programming-language\/enumerations","abstract":[{"text":"Model custom types that define a list of possible values.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Enumerations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"role":"article","kind":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","abstract":[{"type":"text","text":"Set the initial values for a type’s stored properties and perform one-time setup."}],"title":"Initialization","url":"\/documentation\/the-swift-programming-language\/initialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutTheLanguageReference":{"url":"\/documentation\/the-swift-programming-language\/aboutthelanguagereference","abstract":[{"type":"text","text":"Read the notation that the formal grammar uses."}],"role":"article","kind":"article","type":"topic","title":"About the Language Reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutTheLanguageReference"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/NestedTypes":{"url":"\/documentation\/the-swift-programming-language\/nestedtypes","abstract":[{"text":"Define types inside the scope of another type.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Nested Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/NestedTypes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"url":"\/documentation\/the-swift-programming-language\/thebasics","abstract":[{"type":"text","text":"Work with common kinds of data and write basic syntax."}],"role":"article","kind":"article","type":"topic","title":"The Basics","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"url":"\/documentation\/the-swift-programming-language\/memorysafety","abstract":[{"text":"Structure your code to avoid conflicts when accessing memory.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Memory Safety","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"type":"topic","role":"article","abstract":[{"type":"text","text":"Model the lifetime of objects and their relationships."}],"title":"Automatic Reference Counting","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","kind":"article","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","abstract":[{"text":"Store and manipulate text.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Strings and Characters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"url":"\/documentation\/the-swift-programming-language\/guidedtour","abstract":[{"type":"text","text":"Explore the features and syntax of Swift."}],"role":"article","kind":"article","type":"topic","title":"A Swift Tour","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/SummaryOfTheGrammar":{"url":"\/documentation\/the-swift-programming-language\/summaryofthegrammar","abstract":[{"text":"Read the whole formal grammar.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Summary of the Grammar","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/SummaryOfTheGrammar"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Extensions":{"type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Extensions","url":"\/documentation\/the-swift-programming-language\/extensions","title":"Extensions","abstract":[{"text":"Add functionality to an existing type.","type":"text"}],"role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"url":"\/documentation\/the-swift-programming-language\/advancedoperators","abstract":[{"text":"Define custom operators, perform bitwise operations, and use builder syntax.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Advanced Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/functions","kind":"article","title":"Functions","role":"article","abstract":[{"type":"text","text":"Define and call functions, label their arguments, and use their return values."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"title":"Concurrency","type":"topic","url":"\/documentation\/the-swift-programming-language\/concurrency","kind":"article","abstract":[{"type":"text","text":"Perform asynchronous operations."}],"role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"url":"\/documentation\/the-swift-programming-language\/expressions","abstract":[{"text":"Access, modify, and assign values.","type":"text"}],"role":"article","kind":"article","type":"topic","title":"Expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties":{"abstract":[{"type":"text","text":"Access stored and computed values that are part of an instance or type."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/properties","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties","kind":"article","title":"Properties"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes":{"abstract":[{"type":"text","text":"Organize data using arrays, sets, and dictionaries."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes","kind":"article","title":"Collection Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"title":"Opaque and Boxed Types","kind":"article","url":"\/documentation\/the-swift-programming-language\/opaquetypes","type":"topic","role":"article","abstract":[{"text":"Hide implementation details about a value’s type.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Deinitialization":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Deinitialization","abstract":[{"type":"text","text":"Release resources that require custom cleanup."}],"kind":"article","url":"\/documentation\/the-swift-programming-language\/deinitialization","title":"Deinitialization","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ClassesAndStructures":{"kind":"article","abstract":[{"type":"text","text":"Model custom types that encapsulate data."}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ClassesAndStructures","title":"Structures and Classes","type":"topic","role":"article","url":"\/documentation\/the-swift-programming-language\/classesandstructures"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"type":"topic","title":"Attributes","url":"\/documentation\/the-swift-programming-language\/attributes","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","abstract":[{"type":"text","text":"Add information to declarations and types."}],"kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"url":"\/documentation\/the-swift-programming-language\/accesscontrol","abstract":[{"text":"Manage the visibility of code by declaration, file, and module.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Access Control","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts":{"role":"article","kind":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts","abstract":[{"type":"text","text":"Access the elements of a collection."}],"title":"Subscripts","url":"\/documentation\/the-swift-programming-language\/subscripts"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","abstract":[{"text":"Generalize declarations to abstract away concrete types.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Generic Parameters and Arguments","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"url":"\/documentation\/the-swift-programming-language\/errorhandling","role":"article","type":"topic","abstract":[{"text":"Respond to and recover from errors.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","title":"Error Handling","kind":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"url":"\/documentation\/the-swift-programming-language\/generics","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","title":"Generics","role":"article","type":"topic","kind":"article","abstract":[{"type":"text","text":"Write code that works for multiple types and specify requirements for those types."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"url":"\/documentation\/the-swift-programming-language\/declarations","abstract":[{"text":"Introduce types, operators, variables, and other names and constructs.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Declarations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AboutSwift":{"url":"\/documentation\/the-swift-programming-language\/aboutswift","abstract":[{"text":"Hiểu những mục tiêu cấp cao của ngôn ngữ lập trình.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Giới Thiệu Về Swift","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AboutSwift"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators":{"abstract":[{"type":"text","text":"Perform operations like assignment, arithmetic, and comparison."}],"type":"topic","url":"\/documentation\/the-swift-programming-language\/basicoperators","role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators","kind":"article","title":"Basic Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure","abstract":[{"text":"Use the lowest-level components of the syntax.","type":"text"}],"role":"article","type":"topic","kind":"article","title":"Lexical Structure","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"abstract":[{"text":"Access members of an optional value without unwrapping.","type":"text"}],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","kind":"article","title":"Optional Chaining","type":"topic","role":"article","url":"\/documentation\/the-swift-programming-language\/optionalchaining"}}}