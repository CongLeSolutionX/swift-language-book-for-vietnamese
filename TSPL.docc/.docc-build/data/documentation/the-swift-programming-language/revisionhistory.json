{"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"]]},"sections":[],"identifier":{"url":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/RevisionHistory","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"2023-09-18"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.9."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about "},{"type":"codeVoice","code":"if"},{"text":" and ","type":"text"},{"code":"switch","type":"codeVoice"},{"text":" expressions","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression","type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","isActive":true,"type":"reference"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"text":"with information about generating code at compile time.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Expanded the discussion of optionals in "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added an example of concurrency to "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about boxed protocol types","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","type":"reference","isActive":true},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the "},{"code":"buildPartialBlock(first:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"codeVoice","code":"buildPartialBlock(accumulated:next:)"},{"text":" methods","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added visionOS to the lists of platforms in","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Formatted the formal grammar to use blank lines for grouping.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2023-03-30"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.8."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"showing ","type":"text"},{"code":"defer","type":"codeVoice"},{"type":"text","text":" outside of error handling."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adopted Swift-DocC for publication.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Minor corrections and additions throughout.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2022-09-12","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.7."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"with information about sending data between actors and tasks,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and added information about the "},{"code":"@Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@unchecked"},{"text":" attributes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","isActive":true},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked"},{"type":"text","text":" sections."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"with information about creating a regular expression.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the short form of "},{"code":"if","type":"codeVoice"},{"text":"-","type":"text"},{"type":"codeVoice","code":"let"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about "},{"type":"codeVoice","code":"#unavailable"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","isActive":true},{"text":" section.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2022-03-14"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.6.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about using ","type":"text"},{"code":"#if","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"around chained method calls and other postfix expressions."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the visual styling of figures throughout."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2021-09-20"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 5.5."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about asynchronous functions, tasks, and actors"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency","type":"reference"},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration","isActive":true},{"text":",","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods","type":"reference","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","type":"reference"},{"type":"text","text":" sections."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about identifiers that start with an underscore."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2021-04-26"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.4.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder","isActive":true},{"type":"text","text":" sections"},{"text":" ","type":"text"},{"text":"with information about result builders.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about how in-out parameters"},{"text":" ","type":"text"},{"type":"text","text":"can be implicitly converted to unsafe pointers in a function call."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters"},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration"},{"type":"text","text":" sections,"},{"type":"text","text":" "},{"type":"text","text":"now that a function can have multiple variadic parameters."}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression","type":"reference"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"text":"now that implicit member expressions can be chained together.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2020-09-16","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 5.3.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about multiple trailing closures","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures"},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and added information about how trailing closures are matched to parameters"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about synthesized implementations"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" for enumerations"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that you can write a generic "},{"type":"codeVoice","code":"where"},{"text":" clause in more places.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about using unowned references with optional values.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"@main"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added "},{"code":"#filePath","type":"codeVoice"},{"type":"text","text":" to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","type":"reference","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and updated the discussion of "},{"type":"codeVoice","code":"#file"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that closures can refer to "},{"type":"codeVoice","code":"self"},{"text":" implicitly in more scenarios.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement"},{"type":"text","text":" sections,"},{"text":" ","type":"text"},{"text":"now that a ","type":"text"},{"type":"codeVoice","code":"catch"},{"text":" clause can match against multiple errors.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added more information about "},{"type":"codeVoice","code":"Any"},{"text":" ","type":"text"},{"type":"text","text":"and moved it into the new "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","type":"reference","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that lazy properties can have observers.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"text":"now that members of an enumeration can satisfy protocol requirements.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to describe when the getter is called before the observer."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to mention atomic operations."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2020-03-24"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 5.2.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about passing a key path instead of a closure"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about syntactic sugar the lets instances of"},{"text":" ","type":"text"},{"type":"text","text":"classes, structures, and enumerations be used with function call syntax."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"now that subscripts support parameters with default values.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that the ","type":"text"},{"type":"codeVoice","code":"Self"},{"type":"text","text":" can be used in more contexts."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"to make it clearer that an implicitly unwrapped optional value"},{"text":" ","type":"text"},{"type":"text","text":"can be used as either an optional or non-optional value."}]}]}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2019-09-10"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 5.1."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about functions"},{"text":" ","type":"text"},{"type":"text","text":"that specify a protocol that their return value conforms to,"},{"type":"text","text":" "},{"type":"text","text":"instead of providing a specific named return type,"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about property wrappers"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about enumerations and structures","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that are frozen for library evolution"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration"},{"type":"text","text":" sections"},{"type":"text","text":" "},{"text":"with information about functions that omit ","type":"text"},{"type":"codeVoice","code":"return"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"Added information about using subscripts on types","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that an enumeration case pattern can match an optional value."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that memberwise initializers support"},{"text":" ","type":"text"},{"type":"text","text":"omitting parameters for properties that have a default value."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about dynamic members"},{"type":"text","text":" "},{"type":"text","text":"that are looked up by key path at runtime"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added ","type":"text"},{"code":"macCatalyst","type":"codeVoice"},{"type":"text","text":" to the list of target environments"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that "},{"code":"Self","type":"codeVoice"},{"type":"text","text":" can be used to refer to the type"},{"text":" ","type":"text"},{"text":"introduced by the current class, structure, or enumeration declaration.","type":"text"}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2019-03-25","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 5.0.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"and updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with information about extended string delimiters."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about dynamically calling instances as functions"},{"type":"text","text":" "},{"text":"using the ","type":"text"},{"code":"dynamicCallable","type":"codeVoice"},{"type":"text","text":" attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown","isActive":true},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases","type":"reference"},{"type":"text","text":" sections"},{"type":"text","text":" "},{"type":"text","text":"with information about handling future enumeration cases"},{"type":"text","text":" "},{"text":"in switch statements using","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"unknown","type":"codeVoice"},{"type":"text","text":" switch case attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the identity key path ("},{"type":"codeVoice","code":"\\.self"},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using the less than ("},{"type":"codeVoice","code":"<"},{"text":") operator","type":"text"},{"text":" ","type":"text"},{"text":"in platform conditions to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2018-09-17"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.2.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about accessing all of an enumeration’s cases","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about "},{"type":"codeVoice","code":"#error"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"#warning"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about inlining"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"under the ","type":"text"},{"code":"inlinable","type":"codeVoice"},{"text":" and  ","type":"text"},{"code":"usableFromInline","type":"codeVoice"},{"type":"text","text":" attributes."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about members that are looked up by name at runtime"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"under the "},{"type":"codeVoice","code":"dynamicMemberLookup"},{"type":"text","text":" attribute."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"requires_stored_property_inits"},{"type":"text","text":" and "},{"type":"codeVoice","code":"warn_unqualified_access"},{"text":" attributes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about how to conditionally compile code"},{"text":" ","type":"text"},{"type":"text","text":"depending on the Swift compiler version being used"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about ","type":"text"},{"type":"codeVoice","code":"#dsohandle"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2018-03-29","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.1.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about synthesized implementations of equivalence operators","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about conditional protocol conformance","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","isActive":true},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"text":"and to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","type":"reference","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about recursive protocol constraints"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"canImport()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"targetEnvironment()"},{"text":" platform conditions","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","type":"reference"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2017-12-04"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 4.0.3.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"now that key paths support subscript components.","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-09-19","type":"text"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 4.0."}]}]},{"content":[{"inlineContent":[{"text":"Added information about exclusive access to memory","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","type":"reference","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that you can use generic "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clauses"},{"text":" ","type":"text"},{"text":"to constrain associated types.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about multiline string literals"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters"},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"text":"and to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","isActive":true},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of the ","type":"text"},{"type":"codeVoice","code":"objc"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"text":"in ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"now that this attribute is inferred in fewer places."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that subscripts can be generic."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","isActive":true},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"text":"and in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","isActive":true},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that protocol composition types can contain a superclass requirement."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of protocol extensions"},{"type":"text","text":" "},{"text":"in ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"now that "},{"code":"final","type":"codeVoice"},{"type":"text","text":" isn’t allowed in them."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about preconditions and fatal errors"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2017-03-27","type":"text"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 3.1.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"with information about extensions that include requirements."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added examples of iterating over a range","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops","isActive":true,"type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added an example of failable numeric conversions"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"about using the ","type":"text"},{"code":"available","type":"codeVoice"},{"text":" attribute with a Swift language version.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the discussion in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to note that argument labels aren’t allowed when writing a function type.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of Swift language version numbers"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","type":"reference","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that an optional patch number is allowed."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that Swift distinguishes between functions that take multiple parameters"},{"text":" ","type":"text"},{"type":"text","text":"and functions that take a single parameter of a tuple type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the Dynamic Type Expression section"},{"text":" ","type":"text"},{"type":"text","text":"from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions"},{"text":" chapter,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that "},{"code":"type(of:)","type":"codeVoice"},{"text":" is a Swift standard library function.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"2016-10-27","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Updated for Swift 3.0.1.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of weak and unowned references"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","type":"reference","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":", "},{"code":"unowned(safe)","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"unowned(unsafe)"},{"type":"text","text":" "},{"text":"declaration modifiers","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about using an optional value when a value of type ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" is expected.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"to separate the discussion of parenthesized expressions and tuple expressions.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"2016-09-13","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 3.0."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of functions in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","type":"reference","isActive":true},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","type":"reference","isActive":true},{"type":"text","text":" section to note that"},{"type":"text","text":" "},{"type":"text","text":"all parameters get an argument label by default."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of operators","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","isActive":true},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"text":"now that you implement them as type methods instead of as global functions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"code":"open","type":"codeVoice"},{"type":"text","text":" and "},{"code":"fileprivate","type":"codeVoice"},{"type":"text","text":" access-level modifiers"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of "},{"type":"codeVoice","code":"inout"},{"type":"text","text":" in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to note that it appears in front of a parameter’s type","type":"text"},{"type":"text","text":" "},{"text":"instead of in front of a parameter’s name.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"@noescape"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"@autoclosure"},{"type":"text","text":" attributes"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","isActive":true},{"type":"text","text":" sections"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"text":"now that they’re type attributes, rather than declaration attributes.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about operator precedence groups"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators"},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"text":"and to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration","type":"reference","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated discussion throughout"},{"text":" ","type":"text"},{"text":"to use macOS instead of OS X,","type":"text"},{"text":" ","type":"text"},{"code":"Error","type":"codeVoice"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"ErrorProtocol"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"and protocol names such as ","type":"text"},{"code":"ExpressibleByStringLiteral","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instead of "},{"type":"codeVoice","code":"StringLiteralConvertible"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","type":"reference","isActive":true},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that generic "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clauses are written at the end of a declaration."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","isActive":true,"type":"reference"},{"text":" section,","type":"text"},{"type":"text","text":" "},{"text":"now that closures are nonescaping by default.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},{"type":"text","text":" chapter,"},{"text":" ","type":"text"},{"text":"now that ","type":"text"},{"type":"codeVoice","code":"if"},{"text":", ","type":"text"},{"code":"while","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"guard"},{"type":"text","text":" statements"},{"type":"text","text":" "},{"text":"use a comma-separated list of conditions without ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clauses.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Added information about switch cases that have multiple patterns","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","type":"reference","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of function types"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"now that function argument labels are no longer part of a function’s type."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of protocol composition types"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","type":"reference","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"reference","isActive":true},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use the new "},{"type":"codeVoice","code":"Protocol1 & Protocol2"},{"text":" syntax.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion in the Dynamic Type Expression section"},{"type":"text","text":" "},{"type":"text","text":"to use the new "},{"type":"codeVoice","code":"type(of:)"},{"text":" syntax for dynamic type expressions.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of line control statements"},{"text":" ","type":"text"},{"type":"text","text":"to use the "},{"code":"#sourceLocation(file:line:)","type":"codeVoice"},{"text":" syntax","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion in "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return","type":"reference"},{"text":" ","type":"text"},{"text":"to use the new ","type":"text"},{"type":"codeVoice","code":"Never"},{"text":" type.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about playground literals"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion in the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"to note that only nonescaping closures can capture in-out parameters.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion about default parameters","type":"text"},{"type":"text","text":" "},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","type":"reference","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"type":"text","text":"now that they can’t be reordered in function calls."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated attribute arguments to use a colon"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","isActive":true},{"text":" chapter.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about throwing an error","type":"text"},{"text":" ","type":"text"},{"text":"inside the catch block of a rethrowing function","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about accessing the selector"},{"type":"text","text":" "},{"type":"text","text":"of an Objective-C property’s getter or setter"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","isActive":true},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Added information to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"about generic type aliases and using type aliases inside of protocols.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the discussion of function types in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"to note that parentheses around the parameter types are required."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","type":"reference"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"to note that the ","type":"text"},{"code":"@IBAction","type":"codeVoice"},{"type":"text","text":", "},{"code":"@IBOutlet","type":"codeVoice"},{"type":"text","text":", and "},{"code":"@NSManaged","type":"codeVoice"},{"text":" attributes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"imply the "},{"code":"@objc","type":"codeVoice"},{"text":" attribute.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"@GKInspectable"},{"type":"text","text":" attribute"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of optional protocol requirements","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"to clarify that they’re used only in code that interoperates with Objective-C.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the discussion of explicitly using "},{"code":"let","type":"codeVoice"},{"type":"text","text":" in function parameters"},{"type":"text","text":" "},{"type":"text","text":"from the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Removed the discussion of the ","type":"text"},{"code":"Boolean","type":"codeVoice"},{"text":" protocol","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"from the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference","isActive":true},{"text":" chapter,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that the protocol has been removed from the Swift standard library."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Corrected the discussion of the "},{"code":"@NSApplicationMain","type":"codeVoice"},{"type":"text","text":" attribute"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},{"type":"text","text":" section."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2016-03-21"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 2.2.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about how to conditionally compile code","type":"text"},{"type":"text","text":" "},{"type":"text","text":"depending on the version of Swift being used"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about how to distinguish","type":"text"},{"text":" ","type":"text"},{"text":"between methods or initializers whose names differ","type":"text"},{"type":"text","text":" "},{"text":"only by the names of their arguments","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","isActive":true},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"code":"#selector","type":"codeVoice"},{"type":"text","text":" syntax"},{"text":" ","type":"text"},{"text":"for Objective-C selectors","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the discussion of associated types","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use the "},{"code":"associatedtype","type":"codeVoice"},{"text":" keyword","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration","type":"reference"},{"type":"text","text":" sections."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated information about initializers that return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" ","type":"text"},{"text":"before the instance is fully initialized","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"text":"Added information about comparing tuples","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about using keywords as external parameter names"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"type":"codeVoice","code":"@objc"},{"text":" attribute","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference","isActive":true},{"text":" section to note that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"enumerations and enumeration cases can use this attribute."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with discussion of custom operators that contain a dot."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"that rethrowing functions can’t directly throw errors.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"about property observers being called","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when you pass a property as an in-out parameter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a section about error handling"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","type":"reference"},{"text":" chapter.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated figures in the"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"section to show the deallocation process more clearly."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed discussion of C-style "},{"type":"codeVoice","code":"for"},{"text":" loops,","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"codeVoice","code":"++"},{"text":" prefix and postfix operators,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"type":"codeVoice","code":"--"},{"type":"text","text":" prefix and postfix operators."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed discussion of variable function arguments"},{"type":"text","text":" "},{"type":"text","text":"and the special syntax for curried functions."}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2015-10-20"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated for Swift 2.1."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true},{"text":" sections","type":"text"},{"text":" ","type":"text"},{"text":"now that string interpolations can contain string literals.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about the "},{"code":"@noescape","type":"codeVoice"},{"type":"text","text":" attribute."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"and "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","isActive":true,"type":"reference"},{"text":" sections","type":"text"},{"type":"text","text":" "},{"text":"with information about tvOS.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about the behavior of in-out parameters"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","isActive":true,"type":"reference"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about how values specified in closure capture lists are captured.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining"},{"type":"text","text":" "},{"text":"section to clarify how assignment through optional chaining","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"behaves."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Improved the discussion of autoclosures","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example that uses the ","type":"text"},{"type":"codeVoice","code":"??"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"2015-09-16","type":"text"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 2.0."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about error handling","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","isActive":true},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","isActive":true},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement","isActive":true},{"text":" section,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement"},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors","type":"reference","isActive":true},{"type":"text","text":" section,"},{"type":"text","text":" "},{"type":"text","text":"now that all types can conform to the "},{"code":"ErrorType","type":"codeVoice"},{"type":"text","text":" protocol."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the new "},{"type":"codeVoice","code":"try?"},{"type":"text","text":" keyword"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values","type":"reference"},{"type":"text","text":" section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about recursive enumerations"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","isActive":true},{"type":"text","text":" chapter"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","type":"reference"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about API availability checking"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","isActive":true,"type":"reference"},{"text":" chapter","type":"text"},{"type":"text","text":" "},{"text":"and the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the new "},{"type":"codeVoice","code":"guard"},{"text":" statement","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","type":"reference","isActive":true},{"text":" chapter","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","type":"reference"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about protocol extensions"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}]}]},{"content":[{"inlineContent":[{"text":"Added information about access control for unit testing","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about the new optional pattern","type":"text"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","isActive":true,"type":"reference"},{"type":"text","text":" chapter."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"with information about the ","type":"text"},{"type":"codeVoice","code":"repeat"},{"type":"text","text":"-"},{"type":"codeVoice","code":"while"},{"text":" loop.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true},{"type":"text","text":" chapter,"},{"type":"text","text":" "},{"type":"text","text":"now that "},{"type":"codeVoice","code":"String"},{"text":" no longer conforms","type":"text"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"code":"CollectionType","type":"codeVoice"},{"text":" protocol from the Swift standard library.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the new Swift standard library"},{"type":"text","text":" "},{"code":"print(_:separator:terminator)","type":"codeVoice"},{"type":"text","text":" function"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added information about the behavior","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of enumeration cases with "},{"type":"codeVoice","code":"String"},{"text":" raw values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","isActive":true,"type":"reference"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations"},{"type":"text","text":" chapter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"type":"codeVoice","code":"@autoclosure"},{"text":" attribute —","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including its "},{"type":"codeVoice","code":"@autoclosure(escaping)"},{"type":"text","text":" form —"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures"},{"type":"text","text":" section."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"with information about the ","type":"text"},{"type":"codeVoice","code":"@available"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"@warn_unused_result"},{"type":"text","text":" attributes."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about the "},{"code":"@convention","type":"codeVoice"},{"type":"text","text":" attribute."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example of using multiple optional bindings","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with a "},{"type":"codeVoice","code":"where"},{"type":"text","text":" clause"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information to the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"about how concatenating string literals using the "},{"type":"codeVoice","code":"+"},{"type":"text","text":" operator"},{"type":"text","text":" "},{"type":"text","text":"happens at compile time."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"about comparing metatype values and using them"},{"type":"text","text":" "},{"text":"to construct instances with initializer expressions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"about when user-defined assertions are disabled."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the discussion of the "},{"code":"@NSManaged","type":"codeVoice"},{"type":"text","text":" attribute"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference","isActive":true},{"text":" section,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now that the attribute can be applied to certain instance methods."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters","isActive":true,"type":"reference"},{"type":"text","text":" section,"},{"text":" ","type":"text"},{"text":"now that variadic parameters can be declared in any position","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in a function’s parameter list."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about how a nonfailable initializer can delegate","type":"text"},{"type":"text","text":" "},{"type":"text","text":"up to a failable initializer"},{"text":" ","type":"text"},{"type":"text","text":"by force-unwrapping the result of the superclass’s initializer."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about using enumeration cases as functions"},{"text":" ","type":"text"},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about explicitly referencing an initializer"},{"type":"text","text":" "},{"text":"to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression"},{"text":" section.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about build configuration"},{"type":"text","text":" "},{"text":"and line control statements","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements"},{"text":" section.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"about constructing class instances from metatype values.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a note to the","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","isActive":true},{"type":"text","text":" "},{"type":"text","text":"section about weak references being unsuitable for caching."}]}]},{"content":[{"inlineContent":[{"text":"Updated a note in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","isActive":true},{"text":" section","type":"text"},{"text":" ","type":"text"},{"text":"to mention that stored type properties are lazily initialized.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values","isActive":true},{"text":" section","type":"text"},{"type":"text","text":" "},{"text":"to clarify how variables and constants are captured in closures.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to describe when you can apply the ","type":"text"},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" attribute to classes."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"about the performance of executing a ","type":"text"},{"code":"throw","type":"codeVoice"},{"text":" statement.","type":"text"},{"text":" ","type":"text"},{"text":"Added similar information about the ","type":"text"},{"code":"do","type":"codeVoice"},{"text":" statement","type":"text"},{"text":" ","type":"text"},{"text":"in the ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","isActive":true,"type":"reference"},{"text":" section.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with information about stored and computed type properties"},{"text":" ","type":"text"},{"type":"text","text":"for classes, structures, and enumerations."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"with information about labeled break statements.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated a note in the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","isActive":true,"type":"reference"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to clarify the behavior of ","type":"text"},{"code":"willSet","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"didSet","type":"codeVoice"},{"type":"text","text":" observers."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a note to the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with information about the scope of "},{"code":"private","type":"codeVoice"},{"text":" access.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a note to the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","isActive":true},{"type":"text","text":" "},{"text":"section about the differences in weak references","type":"text"},{"type":"text","text":" "},{"type":"text","text":"between garbage collected systems and ARC."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals"},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"with a more precise definition of Unicode scalars."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"2015-04-08"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Updated for Swift 1.2."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift now has a native "},{"type":"codeVoice","code":"Set"},{"type":"text","text":" collection type."},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"@autoclosure"},{"type":"text","text":" is now an attribute of the parameter declaration,"},{"text":" ","type":"text"},{"type":"text","text":"not its type."},{"type":"text","text":" "},{"type":"text","text":"There’s also a new "},{"type":"codeVoice","code":"@noescape"},{"type":"text","text":" parameter declaration attribute."},{"text":" ","type":"text"},{"type":"text","text":"For more information, see "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Type methods and properties now use the "},{"type":"codeVoice","code":"static"},{"text":" keyword","type":"text"},{"text":" ","type":"text"},{"text":"as a declaration modifier.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift now includes the "},{"code":"as?","type":"codeVoice"},{"type":"text","text":" and "},{"code":"as!","type":"codeVoice"},{"type":"text","text":" failable downcast operators."},{"text":" ","type":"text"},{"type":"text","text":"For more information,"},{"type":"text","text":" "},{"text":"see ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new guide section about"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removed the overflow division ("},{"type":"codeVoice","code":"&\/"},{"type":"text","text":") and"},{"type":"text","text":" "},{"type":"text","text":"overflow remainder ("},{"code":"&%","type":"codeVoice"},{"type":"text","text":") operators"},{"text":" ","type":"text"},{"type":"text","text":"from "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the rules for constant and"},{"type":"text","text":" "},{"text":"constant property declaration and initialization.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the definition of Unicode scalars in string literals.","type":"text"},{"type":"text","text":" "},{"text":"See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators"},{"text":" to note that","type":"text"},{"type":"text","text":" "},{"text":"a half-open range with the same start and end index will be empty.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types","type":"reference"},{"type":"text","text":" to clarify"},{"type":"text","text":" "},{"type":"text","text":"the capturing rules for variables."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow","isActive":true,"type":"reference"},{"type":"text","text":" to clarify"},{"text":" ","type":"text"},{"text":"the overflow behavior of signed and unsigned integers","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","isActive":true,"type":"reference"},{"type":"text","text":" to clarify"},{"type":"text","text":" "},{"type":"text","text":"protocol declaration scope and members."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List"},{"type":"text","text":" "},{"type":"text","text":"to clarify the syntax for"},{"text":" ","type":"text"},{"type":"text","text":"weak and unowned references in closure capture lists."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","isActive":true},{"text":" to explicitly mention","type":"text"},{"type":"text","text":" "},{"text":"examples of supported characters for custom operators,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"such as those in the Mathematical Operators, Miscellaneous Symbols,"},{"text":" ","type":"text"},{"text":"and Dingbats Unicode blocks.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Constants can now be declared without being initialized"},{"text":" ","type":"text"},{"type":"text","text":"in local function scope."},{"type":"text","text":" "},{"text":"They must have a set value before first use.","type":"text"},{"type":"text","text":" "},{"text":"For more information, see ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"In an initializer, constant properties can now only assign a value once."},{"type":"text","text":" "},{"type":"text","text":"For more information,"},{"text":" ","type":"text"},{"text":"see ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiple optional bindings can now appear in a single "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statement"},{"type":"text","text":" "},{"text":"as a comma-separated list of assignment expressions.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For more information, see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression"},{"type":"text","text":" "},{"text":"must appear within a postfix expression.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Protocol casts are no longer limited to ","type":"text"},{"code":"@objc","type":"codeVoice"},{"text":" protocols.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Type casts that can fail at runtime","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"now use the "},{"type":"codeVoice","code":"as?"},{"type":"text","text":" or "},{"code":"as!","type":"codeVoice"},{"text":" operator,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and type casts that are guaranteed not to fail use the "},{"code":"as","type":"codeVoice"},{"text":" operator.","type":"text"},{"text":" ","type":"text"},{"text":"For more information, see ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators"},{"type":"text","text":"."}]}]}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"2014-10-16"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated for Swift 1.1.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a full guide to "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers","isActive":true,"type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a description of "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"for protocols."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Constants and variables of type "},{"type":"codeVoice","code":"Any"},{"text":" can now contain","type":"text"},{"text":" ","type":"text"},{"text":"function instances. Updated the example in ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"to show how to check for and cast to a function type","type":"text"},{"text":" ","type":"text"},{"text":"within a ","type":"text"},{"type":"codeVoice","code":"switch"},{"text":" statement.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enumerations with raw values"},{"type":"text","text":" "},{"type":"text","text":"now have a "},{"code":"rawValue","type":"codeVoice"},{"type":"text","text":" property rather than a "},{"type":"codeVoice","code":"toRaw()"},{"type":"text","text":" method"},{"type":"text","text":" "},{"text":"and a failable initializer with a ","type":"text"},{"code":"rawValue","type":"codeVoice"},{"text":" parameter","type":"text"},{"type":"text","text":" "},{"text":"rather than a ","type":"text"},{"type":"codeVoice","code":"fromRaw()"},{"type":"text","text":" method."},{"text":" ","type":"text"},{"text":"For more information, see ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values","type":"reference","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new reference section about"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers","isActive":true},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"which can trigger initialization failure."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Custom operators can now contain the "},{"type":"codeVoice","code":"?"},{"type":"text","text":" character."},{"type":"text","text":" "},{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","isActive":true},{"type":"text","text":" reference to describe"},{"text":" ","type":"text"},{"type":"text","text":"the revised rules."},{"type":"text","text":" "},{"type":"text","text":"Removed a duplicate description of the valid set of operator characters"},{"type":"text","text":" "},{"text":"from ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"2014-08-18"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"New document that describes Swift 1.0,"},{"text":" ","type":"text"},{"text":"Apple’s new programming language for building iOS and OS X apps.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a new section about"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","isActive":true},{"type":"text","text":" in protocols."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","type":"reference","isActive":true},{"type":"text","text":" can now use string interpolation."},{"type":"text","text":" "},{"type":"text","text":"Removed a note to the contrary."}]}]},{"content":[{"inlineContent":[{"text":"Updated the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters","type":"reference"},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to reflect the fact that ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Character","type":"codeVoice"},{"type":"text","text":" values"},{"type":"text","text":" "},{"type":"text","text":"can no longer be combined with the addition operator ("},{"code":"+","type":"codeVoice"},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"or addition assignment operator (","type":"text"},{"type":"codeVoice","code":"+="},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"These operators are now used only with "},{"type":"codeVoice","code":"String"},{"text":" values.","type":"text"},{"type":"text","text":" "},{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" type’s ","type":"text"},{"code":"append(_:)","type":"codeVoice"},{"text":" method","type":"text"},{"type":"text","text":" "},{"text":"to append a single ","type":"text"},{"code":"Character","type":"codeVoice"},{"type":"text","text":" value onto the end of a string."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added information about the ","type":"text"},{"type":"codeVoice","code":"availability"},{"text":" attribute to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes","isActive":true,"type":"reference"},{"type":"text","text":" section."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals","isActive":true,"type":"reference"},{"type":"text","text":" no longer implicitly evaluate to"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"text":" when they have a value and ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" when they do not,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to avoid confusion when working with optional "},{"type":"codeVoice","code":"Bool"},{"text":" values.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Instead, make an explicit check against "},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"code":"==","type":"codeVoice"},{"type":"text","text":" or "},{"code":"!=","type":"codeVoice"},{"type":"text","text":" operators"},{"type":"text","text":" "},{"text":"to find out if an optional contains a value.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift now has a "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"("},{"type":"codeVoice","code":"a ?? b"},{"text":"), which unwraps an optional’s value if it exists,","type":"text"},{"type":"text","text":" "},{"text":"or returns a default value if the optional is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated and expanded"},{"type":"text","text":" "},{"type":"text","text":"the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to reflect and demonstrate that string and character comparison"},{"type":"text","text":" "},{"type":"text","text":"and prefix \/ suffix comparison are now based on"},{"text":" ","type":"text"},{"type":"text","text":"Unicode canonical equivalence of extended grapheme clusters."}]}]},{"content":[{"inlineContent":[{"text":"You can now try to set a property’s value, assign to a subscript,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or call a mutating method or operator through"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The information about","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining"},{"text":" ","type":"text"},{"type":"text","text":"has been updated accordingly,"},{"text":" ","type":"text"},{"text":"and the examples of checking for method call success in","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"have been expanded to show how to check for property setting success.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"through optional chaining.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array","type":"reference","isActive":true},{"type":"text","text":" section"},{"text":" ","type":"text"},{"text":"to note that you can no longer append a single item to an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"type":"codeVoice","code":"+="},{"type":"text","text":" operator."},{"text":" ","type":"text"},{"type":"text","text":"Instead, use the "},{"type":"codeVoice","code":"append(_:)"},{"text":" method,","type":"text"},{"type":"text","text":" "},{"text":"or append a single-item array with the ","type":"text"},{"type":"codeVoice","code":"+="},{"text":" operator.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added a note that the start value ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" ","type":"text"},{"text":"for the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators"},{"type":"text","text":" "},{"type":"codeVoice","code":"a...b"},{"text":" and ","type":"text"},{"code":"a..<b","type":"codeVoice"},{"type":"text","text":" "},{"text":"must not be greater than the end value ","type":"text"},{"type":"codeVoice","code":"b"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Rewrote the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance"},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"text":"to remove its introductory coverage of initializer overrides.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This chapter now focuses more on the addition of"},{"text":" ","type":"text"},{"type":"text","text":"new functionality in a subclass,"},{"type":"text","text":" "},{"type":"text","text":"and the modification of existing functionality with overrides."},{"type":"text","text":" "},{"text":"The chapter’s example of","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters","isActive":true},{"type":"text","text":" "},{"type":"text","text":"has been rewritten to show how to override a "},{"code":"description","type":"codeVoice"},{"text":" property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(The examples of modifying an inherited property’s default value"},{"text":" ","type":"text"},{"type":"text","text":"in a subclass initializer have been moved to"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization"},{"type":"text","text":" chapter.)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding","type":"reference","isActive":true},{"type":"text","text":" section"},{"type":"text","text":" "},{"type":"text","text":"to note that overrides of a designated initializer"},{"type":"text","text":" "},{"text":"must now be marked with the ","type":"text"},{"type":"codeVoice","code":"override"},{"type":"text","text":" modifier."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers"},{"text":" section","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to note that the "},{"type":"codeVoice","code":"required"},{"type":"text","text":" modifier is now written before"},{"text":" ","type":"text"},{"type":"text","text":"every subclass implementation of a required initializer,"},{"type":"text","text":" "},{"type":"text","text":"and that the requirements for required initializers"},{"type":"text","text":" "},{"text":"can now be satisfied by automatically inherited initializers.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Infix "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods","type":"reference","isActive":true},{"type":"text","text":" no longer require"},{"type":"text","text":" "},{"text":"the ","type":"text"},{"type":"codeVoice","code":"@infix"},{"type":"text","text":" attribute."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"@prefix","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"@postfix"},{"text":" attributes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators"},{"type":"text","text":" "},{"type":"text","text":"have been replaced by "},{"type":"codeVoice","code":"prefix"},{"type":"text","text":" and "},{"code":"postfix","type":"codeVoice"},{"text":" declaration modifiers.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added a note about the order in which"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators","type":"reference"},{"text":" are applied","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when both a prefix and a postfix operator are applied to"},{"type":"text","text":" "},{"type":"text","text":"the same operand."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Operator functions for"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","isActive":true,"type":"reference"},{"text":" no longer use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"@assignment","type":"codeVoice"},{"type":"text","text":" attribute when defining the function."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The order in which modifiers are specified when defining"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","type":"reference","isActive":true},{"type":"text","text":" has changed."},{"type":"text","text":" "},{"type":"text","text":"You now write "},{"code":"prefix operator","type":"codeVoice"},{"type":"text","text":" rather than "},{"type":"codeVoice","code":"operator prefix"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"for example.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added information about the "},{"code":"dynamic","type":"codeVoice"},{"type":"text","text":" declaration modifier"},{"type":"text","text":" "},{"text":"in ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","isActive":true},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added information about how type inference works"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added more information about curried functions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new chapter about ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true},{"type":"text","text":" chapter"},{"type":"text","text":" "},{"type":"text","text":"to reflect the fact that Swift’s "},{"type":"codeVoice","code":"Character"},{"text":" type now represents","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a single Unicode extended grapheme cluster."},{"text":" ","type":"text"},{"text":"Includes a new section on","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"and more information about"},{"type":"text","text":" "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals"},{"type":"text","text":" section"},{"type":"text","text":" "},{"text":"to note that Unicode scalars inside string literals","type":"text"},{"type":"text","text":" "},{"text":"are now written as ","type":"text"},{"code":"\\u{n}","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"where "},{"code":"n","type":"codeVoice"},{"text":" is a hexadecimal number between 0 and 10FFFF,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the range of Unicode’s codespace."}]}]},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"NSString"},{"text":" ","type":"text"},{"code":"length","type":"codeVoice"},{"type":"text","text":" property is now mapped onto"},{"type":"text","text":" "},{"type":"text","text":"Swift’s native "},{"type":"codeVoice","code":"String"},{"type":"text","text":" type as "},{"type":"codeVoice","code":"utf16Count"},{"text":", not ","type":"text"},{"type":"codeVoice","code":"utf16count"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift’s native ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" type no longer has"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"uppercaseString"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"lowercaseString"},{"text":" property.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The corresponding section in"},{"text":" ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"has been removed, and various code examples have been updated.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Updated the "},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","type":"reference","isActive":true},{"type":"text","text":" section to note that"},{"type":"text","text":" "},{"text":"multiple related variables can be defined on a single line","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with one type annotation."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"@optional","type":"codeVoice"},{"text":", ","type":"text"},{"code":"@lazy","type":"codeVoice"},{"text":", ","type":"text"},{"code":"@final","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"@required"},{"text":" attributes","type":"text"},{"type":"text","text":" "},{"text":"are now the ","type":"text"},{"code":"optional","type":"codeVoice"},{"text":", ","type":"text"},{"code":"lazy","type":"codeVoice"},{"type":"text","text":", "},{"code":"final","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"required"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Updated the entire book to refer to "},{"type":"codeVoice","code":"..<"},{"type":"text","text":" as"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator"},{"text":" ","type":"text"},{"type":"text","text":"(rather than the “half-closed range operator”)."}]}]},{"content":[{"inlineContent":[{"text":"Updated the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary"},{"type":"text","text":" "},{"type":"text","text":"section to note that "},{"code":"Dictionary","type":"codeVoice"},{"text":" now has","type":"text"},{"text":" ","type":"text"},{"text":"a Boolean ","type":"text"},{"code":"isEmpty","type":"codeVoice"},{"text":" property.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Clarified the full list of characters that can be used"},{"type":"text","text":" "},{"type":"text","text":"when defining "},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"nil"},{"type":"text","text":" and the Booleans "},{"type":"codeVoice","code":"true"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" are now ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift’s "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" type now has full value semantics."},{"text":" ","type":"text"},{"text":"Updated the information about ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays"},{"type":"text","text":" to reflect the new approach."},{"type":"text","text":" "},{"type":"text","text":"Also clarified the assignment and copy behavior for strings arrays and dictionaries."}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","isActive":true},{"text":" is now written as","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"[SomeType]"},{"type":"text","text":" rather than "},{"code":"SomeType[]","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added a new section about ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"which is written as "},{"type":"codeVoice","code":"[KeyType: ValueType]"},{"type":"text","text":"."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added a new section about "},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Examples of ","type":"text"},{"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions","isActive":true},{"text":" now use","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the global "},{"code":"sorted(_:_:)","type":"codeVoice"},{"type":"text","text":" function"},{"text":" ","type":"text"},{"type":"text","text":"rather than the global "},{"type":"codeVoice","code":"sort(_:_:)"},{"text":" function,","type":"text"},{"type":"text","text":" "},{"text":"to reflect the new array value semantics.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Updated the information about ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"to clarify that the memberwise structure initializer is made available"},{"type":"text","text":" "},{"text":"even if a structure’s stored properties don’t have default values.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Updated to ","type":"text"},{"code":"..<","type":"codeVoice"},{"type":"text","text":" rather than "},{"type":"codeVoice","code":".."},{"text":" ","type":"text"},{"text":"for the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Added an example of ","type":"text"},{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type","type":"reference","isActive":true},{"type":"text","text":"."}]}]}]}],"kind":"content"}],"metadata":{"title":"Document Revision History"},"abstract":[{"type":"text","text":"Review the recent changes to this book."}],"references":{"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Guard-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Guard-Statement","title":"Guard Statement","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Guard-Statement","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Required-Initializers":{"url":"\/documentation\/the-swift-programming-language\/initialization#Required-Initializers","title":"Required Initializers","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Required-Initializers","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Subscripts":{"type":"topic","title":"Generic Subscripts","url":"\/documentation\/the-swift-programming-language\/generics#Generic-Subscripts","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Subscripts","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Switch":{"abstract":[],"kind":"section","title":"Switch","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Switch","type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow#Switch"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance#Overriding-Property-Getters-and-Setters":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/inheritance#Overriding-Property-Getters-and-Setters","title":"Overriding Property Getters and Setters","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance#Overriding-Property-Getters-and-Setters","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Macros":{"url":"\/documentation\/the-swift-programming-language\/macros","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Macros","type":"topic","role":"article","abstract":[{"type":"text","text":"Use macros to generate code at compile time."}],"title":"Macros"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Await-Operator":{"type":"topic","title":"Await Operator","url":"\/documentation\/the-swift-programming-language\/expressions#Await-Operator","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Await-Operator","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/MemorySafety":{"kind":"article","abstract":[{"type":"text","text":"Structure your code to avoid conflicts when accessing memory."}],"type":"topic","title":"Memory Safety","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/MemorySafety","role":"article","url":"\/documentation\/the-swift-programming-language\/memorysafety"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Assigning-Constant-Properties-During-Initialization":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Assigning-Constant-Properties-During-Initialization","kind":"section","abstract":[],"title":"Assigning Constant Properties During Initialization","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Assigning-Constant-Properties-During-Initialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Nil-Coalescing-Operator":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/basicoperators#Nil-Coalescing-Operator","title":"Nil-Coalescing Operator","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Nil-Coalescing-Operator","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow","kind":"article","type":"topic","abstract":[{"type":"text","text":"Structure code with branches, loops, and early exits."}],"title":"Control Flow","url":"\/documentation\/the-swift-programming-language\/controlflow","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Line-Control-Statement":{"type":"topic","title":"Line Control Statement","url":"\/documentation\/the-swift-programming-language\/statements#Line-Control-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Line-Control-Statement","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Implicitly-Unwrapped-Optionals":{"kind":"section","title":"Implicitly Unwrapped Optionals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Implicitly-Unwrapped-Optionals","type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Implicitly-Unwrapped-Optionals","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switch-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Switch-Statement","title":"Switch Statement","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switch-Statement","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Constant-Declaration":{"type":"topic","title":"Constant Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Constant-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Constant-Declaration","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Printing-Constants-and-Variables":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/thebasics#Printing-Constants-and-Variables","title":"Printing Constants and Variables","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Printing-Constants-and-Variables","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#For-In-Loops":{"title":"For-In Loops","abstract":[],"url":"\/documentation\/the-swift-programming-language\/controlflow#For-In-Loops","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#For-In-Loops","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Functions-With-an-Implicit-Return":{"kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions#Functions-With-an-Implicit-Return","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Functions-With-an-Implicit-Return","abstract":[],"title":"Functions With an Implicit Return"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Initializer-Expression":{"type":"topic","title":"Initializer Expression","url":"\/documentation\/the-swift-programming-language\/expressions#Initializer-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Initializer-Expression","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Type-Subscripts":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/subscripts#Type-Subscripts","title":"Type Subscripts","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Type-Subscripts","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Overflow-Operators":{"abstract":[],"url":"\/documentation\/the-swift-programming-language\/advancedoperators#Overflow-Operators","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Overflow-Operators","type":"topic","title":"Overflow Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Unicode-Scalar-Values":{"type":"topic","title":"Unicode Scalar Values","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Unicode-Scalar-Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Unicode-Scalar-Values","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compile-Time-Diagnostic-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Compile-Time-Diagnostic-Statement","title":"Compile-Time Diagnostic Statement","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compile-Time-Diagnostic-Statement","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Generic-Where-Clauses":{"kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/generics#Generic-Where-Clauses","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Generic-Where-Clauses","abstract":[],"title":"Generic Where Clauses"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extensions-with-a-Generic-Where-Clause":{"title":"Extensions with a Generic Where Clause","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extensions-with-a-Generic-Where-Clause","abstract":[],"type":"topic","kind":"section","url":"\/documentation\/the-swift-programming-language\/generics#Extensions-with-a-Generic-Where-Clause"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Concatenating-Strings-and-Characters":{"type":"topic","title":"Concatenating Strings and Characters","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Concatenating-Strings-and-Characters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Concatenating-Strings-and-Characters","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns":{"role":"article","url":"\/documentation\/the-swift-programming-language\/patterns","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns","abstract":[{"type":"text","text":"Match and destructure values."}],"type":"topic","kind":"article","title":"Patterns"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Unowned-Optional-References":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Unowned-Optional-References","title":"Unowned Optional References","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Unowned-Optional-References","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors-Using-Do-Catch":{"type":"topic","title":"Handling Errors Using Do-Catch","url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors-Using-Do-Catch","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors-Using-Do-Catch","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Failable-Initializers":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Failable-Initializers","kind":"section","title":"Failable Initializers","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Failable-Initializers"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Do-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Do-Statement","title":"Do Statement","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Do-Statement","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Compiler-Control-Statements":{"type":"topic","title":"Compiler Control Statements","url":"\/documentation\/the-swift-programming-language\/statements#Compiler-Control-Statements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Compiler-Control-Statements","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Type-Properties":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/properties#Type-Properties","title":"Type Properties","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Type-Properties","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Recursive-Enumerations":{"type":"topic","title":"Recursive Enumerations","url":"\/documentation\/the-swift-programming-language\/enumerations#Recursive-Enumerations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Recursive-Enumerations","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#frozen":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#frozen","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#frozen","title":"frozen","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Stored-Variable-Observers-and-Property-Observers":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Stored-Variable-Observers-and-Property-Observers","title":"Stored Variable Observers and Property Observers","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Stored-Variable-Observers-and-Property-Observers","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unknown":{"type":"topic","title":"unknown","url":"\/documentation\/the-swift-programming-language\/attributes#unknown","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unknown","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Result-Builders":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Result-Builders","title":"Result Builders","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Result-Builders","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Function-Call-Expression":{"type":"topic","title":"Function Call Expression","url":"\/documentation\/the-swift-programming-language\/expressions#Function-Call-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Function-Call-Expression","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Explicit-Member-Expression":{"abstract":[],"kind":"section","title":"Explicit Member Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Explicit-Member-Expression","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Explicit-Member-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Range-Operators":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Range-Operators","url":"\/documentation\/the-swift-programming-language\/basicoperators#Range-Operators","abstract":[],"kind":"section","title":"Range Operators","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Observers":{"url":"\/documentation\/the-swift-programming-language\/properties#Property-Observers","title":"Property Observers","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Observers","type":"topic","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Functions-that-Never-Return":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Functions-that-Never-Return","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Functions-that-Never-Return","title":"Functions that Never Return","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Conditionally-Conforming-to-a-Protocol":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Conditionally-Conforming-to-a-Protocol","title":"Conditionally Conforming to a Protocol","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Conditionally-Conforming-to-a-Protocol","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OpaqueTypes":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/opaquetypes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OpaqueTypes","kind":"article","role":"article","title":"Opaque and Boxed Types","abstract":[{"type":"text","text":"Hide implementation details about a value’s type."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Comparison-Operators":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Comparison-Operators","title":"Comparison Operators","url":"\/documentation\/the-swift-programming-language\/basicoperators#Comparison-Operators","abstract":[],"kind":"section","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining","kind":"article","type":"topic","abstract":[{"type":"text","text":"Access members of an optional value without unwrapping."}],"title":"Optional Chaining","url":"\/documentation\/the-swift-programming-language\/optionalchaining","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Availability-Condition":{"type":"topic","title":"Availability Condition","url":"\/documentation\/the-swift-programming-language\/statements#Availability-Condition","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Availability-Condition","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#resultBuilder":{"kind":"section","type":"topic","title":"resultBuilder","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#resultBuilder","url":"\/documentation\/the-swift-programming-language\/attributes#resultBuilder"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Handling-Errors":{"abstract":[],"kind":"section","title":"Handling Errors","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Handling-Errors","type":"topic","url":"\/documentation\/the-swift-programming-language\/errorhandling#Handling-Errors"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Variable-Properties":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Type-Variable-Properties","title":"Type Variable Properties","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Variable-Properties","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-an-Array":{"type":"topic","title":"Accessing and Modifying an Array","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-an-Array","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-an-Array","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Methods-with-Special-Names":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Methods-with-Special-Names","title":"Methods with Special Names","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Methods-with-Special-Names","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Optional-Protocol-Requirements":{"type":"topic","title":"Optional Protocol Requirements","url":"\/documentation\/the-swift-programming-language\/protocols#Optional-Protocol-Requirements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Optional-Protocol-Requirements","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Interpolation":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Interpolation","title":"String Interpolation","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Interpolation","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Representing-and-Throwing-Errors":{"type":"topic","title":"Representing and Throwing Errors","url":"\/documentation\/the-swift-programming-language\/errorhandling#Representing-and-Throwing-Errors","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Representing-and-Throwing-Errors","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Early-Exit":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/controlflow#Early-Exit","title":"Early Exit","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Early-Exit","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Self-Type":{"type":"topic","title":"Self Type","url":"\/documentation\/the-swift-programming-language\/types#Self-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Self-Type","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Calling-Methods-Through-Optional-Chaining":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Calling-Methods-Through-Optional-Chaining","title":"Calling Methods Through Optional Chaining","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Calling-Methods-Through-Optional-Chaining","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Accessing-and-Modifying-a-Dictionary":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Accessing-and-Modifying-a-Dictionary","title":"Accessing and Modifying a Dictionary","abstract":[],"kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Accessing-and-Modifying-a-Dictionary"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/BasicOperators#Half-Open-Range-Operator":{"type":"topic","title":"Half-Open Range Operator","url":"\/documentation\/the-swift-programming-language\/basicoperators#Half-Open-Range-Operator","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/BasicOperators#Half-Open-Range-Operator","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Result-Transformations":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#Result-Transformations","title":"Result Transformations","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Result-Transformations","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","url":"\/documentation\/the-swift-programming-language\/protocols#Adopting-a-Protocol-Using-a-Synthesized-Implementation","title":"Adopting a Protocol Using a Synthesized Implementation","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Any-Type":{"type":"topic","title":"Any Type","url":"\/documentation\/the-swift-programming-language\/types#Any-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Any-Type","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl":{"url":"\/documentation\/the-swift-programming-language\/accesscontrol","type":"topic","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl","abstract":[{"text":"Manage the visibility of code by declaration, file, and module.","type":"text"}],"title":"Access Control","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Regular-Expression-Literals":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Regular-Expression-Literals","title":"Regular Expression Literals","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Regular-Expression-Literals","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Precedence-for-Custom-Infix-Operators":{"type":"topic","title":"Precedence for Custom Infix Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Precedence-for-Custom-Infix-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Precedence-for-Custom-Infix-Operators","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optional-Binding":{"abstract":[],"kind":"section","title":"Optional Binding","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optional-Binding","type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Optional-Binding"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Raw-Values":{"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Raw-Values","title":"Raw Values","type":"topic","url":"\/documentation\/the-swift-programming-language\/enumerations#Raw-Values","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Inheritance":{"title":"Inheritance","url":"\/documentation\/the-swift-programming-language\/inheritance","abstract":[{"text":"Subclass to add or override functionality.","type":"text"}],"role":"article","kind":"article","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Inheritance"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Operator-Methods":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Operator-Methods","title":"Operator Methods","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Operator-Methods","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Rethrowing-Functions-and-Methods":{"type":"topic","title":"Rethrowing Functions and Methods","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Rethrowing-Functions-and-Methods","url":"\/documentation\/the-swift-programming-language\/declarations#Rethrowing-Functions-and-Methods","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Comparing-Strings":{"type":"topic","title":"Comparing Strings","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Comparing-Strings","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Comparing-Strings","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations","kind":"article","role":"article","title":"Declarations","abstract":[{"type":"text","text":"Introduce types, operators, variables, and other names and constructs."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency":{"title":"Concurrency","kind":"article","type":"topic","role":"article","abstract":[{"text":"Perform asynchronous operations.","type":"text"}],"url":"\/documentation\/the-swift-programming-language\/concurrency","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Hash-Values-for-Set-Types":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Hash-Values-for-Set-Types","title":"Hash Values for Set Types","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Hash-Values-for-Set-Types","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Autoclosures":{"type":"topic","title":"Autoclosures","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Autoclosures","url":"\/documentation\/the-swift-programming-language\/closures#Autoclosures","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Mutability-of-Collections":{"type":"topic","title":"Mutability of Collections","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Mutability-of-Collections","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Mutability-of-Collections","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions":{"abstract":[{"type":"text","text":"Define and call functions, label their arguments, and use their return values."}],"kind":"article","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions","title":"Functions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Asynchronous-Functions-and-Methods":{"kind":"section","title":"Asynchronous Functions and Methods","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Asynchronous-Functions-and-Methods","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Asynchronous-Functions-and-Methods","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Member-Expression":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Member-Expression","title":"Implicit Member Expression","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Member-Expression","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Escaping-Closures":{"type":"topic","title":"Escaping Closures","url":"\/documentation\/the-swift-programming-language\/closures#Escaping-Closures","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Escaping-Closures","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#String-Literals":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#String-Literals","title":"String Literals","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#String-Literals","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Protocol-Composition-Type":{"type":"topic","title":"Protocol Composition Type","url":"\/documentation\/the-swift-programming-language\/types#Protocol-Composition-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Protocol-Composition-Type","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Implicit-Conversion-to-a-Pointer-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Implicit-Conversion-to-a-Pointer-Type","title":"Implicit Conversion to a Pointer Type","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Implicit-Conversion-to-a-Pointer-Type","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Contextual-Where-Clauses":{"type":"topic","title":"Contextual Where Clauses","url":"\/documentation\/the-swift-programming-language\/generics#Contextual-Where-Clauses","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Contextual-Where-Clauses","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Checking-API-Availability":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/controlflow#Checking-API-Availability","title":"Checking API Availability","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Checking-API-Availability","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints":{"type":"topic","title":"Using a Protocol in Its Associated Type’s Constraints","url":"\/documentation\/the-swift-programming-language\/generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Using-a-Protocol-in-Its-Associated-Types-Constraints","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TypeCasting#Type-Casting-for-Any-and-AnyObject":{"kind":"section","abstract":[],"type":"topic","url":"\/documentation\/the-swift-programming-language\/typecasting#Type-Casting-for-Any-and-AnyObject","title":"Type Casting for Any and AnyObject","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TypeCasting#Type-Casting-for-Any-and-AnyObject"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting":{"role":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting","type":"topic","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting","kind":"article","abstract":[{"text":"Model the lifetime of objects and their relationships.","type":"text"}],"title":"Automatic Reference Counting"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Selector-Expression":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Selector-Expression","title":"Selector Expression","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Selector-Expression","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Keywords-and-Punctuation":{"type":"topic","title":"Keywords and Punctuation","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Keywords-and-Punctuation","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Keywords-and-Punctuation","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Array-Type-Shorthand-Syntax":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Array-Type-Shorthand-Syntax","title":"Array Type Shorthand Syntax","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Array-Type-Shorthand-Syntax","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols","kind":"article","title":"Protocols","abstract":[{"text":"Define requirements that conforming types must implement.","type":"text"}],"url":"\/documentation\/the-swift-programming-language\/protocols","type":"topic","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Initializer-Requirements":{"type":"topic","title":"Initializer Requirements","url":"\/documentation\/the-swift-programming-language\/protocols#Initializer-Requirements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Initializer-Requirements","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Operators":{"abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Operators","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Operators","type":"topic","kind":"section","title":"Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types":{"url":"\/documentation\/the-swift-programming-language\/types","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types","type":"topic","role":"article","abstract":[{"type":"text","text":"Use built-in named and compound types."}],"title":"Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes":{"title":"Attributes","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes","abstract":[{"text":"Add information to declarations and types.","type":"text"}],"url":"\/documentation\/the-swift-programming-language\/attributes","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Debugging-with-Assertions":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/thebasics#Debugging-with-Assertions","title":"Debugging with Assertions","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Debugging-with-Assertions","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Type-Attributes":{"type":"topic","title":"Type Attributes","url":"\/documentation\/the-swift-programming-language\/attributes#Type-Attributes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Type-Attributes","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Extension-Declaration":{"kind":"section","title":"Extension Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Extension-Declaration","type":"topic","url":"\/documentation\/the-swift-programming-language\/declarations#Extension-Declaration","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Failable-Initializers":{"abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Failable-Initializers","title":"Failable Initializers","url":"\/documentation\/the-swift-programming-language\/declarations#Failable-Initializers","type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Default-Parameter-Values":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Default-Parameter-Values","title":"Default Parameter Values","abstract":[],"kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions#Default-Parameter-Values"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Identifiers":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Identifiers","title":"Identifiers","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Identifiers","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#In-Out-Parameters":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#In-Out-Parameters","kind":"section","abstract":[],"type":"topic","title":"In-Out Parameters","url":"\/documentation\/the-swift-programming-language\/declarations#In-Out-Parameters"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Literals":{"type":"topic","title":"String Literals","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Literals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Literals","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Switching-Over-Future-Enumeration-Cases":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Switching-Over-Future-Enumeration-Cases","title":"Switching Over Future Enumeration Cases","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Switching-Over-Future-Enumeration-Cases","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GuidedTour":{"title":"A Swift Tour","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GuidedTour","abstract":[{"type":"text","text":"Explore the features and syntax of Swift."}],"url":"\/documentation\/the-swift-programming-language\/guidedtour","type":"topic","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics":{"url":"\/documentation\/the-swift-programming-language\/thebasics","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics","type":"topic","role":"article","abstract":[{"type":"text","text":"Work with common kinds of data and write basic syntax."}],"title":"The Basics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Defining-a-Capture-List":{"type":"topic","title":"Defining a Capture List","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Defining-a-Capture-List","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Defining-a-Capture-List","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Inheritance-and-Overriding":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Inheritance-and-Overriding","url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Inheritance-and-Overriding","kind":"section","abstract":[],"type":"topic","title":"Initializer Inheritance and Overriding"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Subscripts#Subscript-Options":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/subscripts#Subscript-Options","title":"Subscript Options","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Subscripts#Subscript-Options","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Subscripts-of-Optional-Type":{"type":"topic","title":"Accessing Subscripts of Optional Type","url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Subscripts-of-Optional-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Subscripts-of-Optional-Type","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Assertions-and-Preconditions":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/thebasics#Assertions-and-Preconditions","title":"Assertions and Preconditions","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Assertions-and-Preconditions","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#String-Indices":{"type":"topic","title":"String Indices","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#String-Indices","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#String-Indices","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-Any-Type":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-Any-Type","title":"Enumerations with Cases of Any Type","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-Any-Type","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling":{"url":"\/documentation\/the-swift-programming-language\/errorhandling","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling","type":"topic","role":"article","abstract":[{"type":"text","text":"Respond to and recover from errors."}],"title":"Error Handling"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Capture-Lists":{"title":"Capture Lists","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Capture-Lists","abstract":[],"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Capture-Lists"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Arrays":{"type":"topic","title":"Arrays","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Arrays","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Arrays","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Function-Declaration":{"type":"topic","title":"Function Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Function-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Function-Declaration","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Implicitly-Assigned-Raw-Values":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/enumerations#Implicitly-Assigned-Raw-Values","title":"Implicitly Assigned Raw Values","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Implicitly-Assigned-Raw-Values","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Type-Alias-Declaration":{"type":"topic","title":"Type Alias Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Type-Alias-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Type-Alias-Declaration","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Precedence-Group-Declaration":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/declarations#Precedence-Group-Declaration","title":"Precedence Group Declaration","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Precedence-Group-Declaration","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Extending-a-Generic-Type":{"type":"topic","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Extending-a-Generic-Type","kind":"section","title":"Extending a Generic Type","url":"\/documentation\/the-swift-programming-language\/generics#Extending-a-Generic-Type"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations","role":"article","abstract":[{"text":"Model custom types that define a list of possible values.","type":"text"}],"kind":"article","url":"\/documentation\/the-swift-programming-language\/enumerations","type":"topic","title":"Enumerations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Extensions":{"kind":"section","abstract":[],"type":"topic","url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Extensions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Extensions","title":"Protocol Extensions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#available":{"type":"topic","title":"available","url":"\/documentation\/the-swift-programming-language\/attributes#available","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#available","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Trailing-Closures":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/closures#Trailing-Closures","title":"Trailing Closures","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Trailing-Closures","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#While-Statement":{"type":"topic","title":"While Statement","url":"\/documentation\/the-swift-programming-language\/statements#While-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#While-Statement","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Optional-Pattern":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/patterns#Optional-Pattern","title":"Optional Pattern","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Optional-Pattern","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ErrorHandling#Converting-Errors-to-Optional-Values":{"type":"topic","title":"Converting Errors to Optional Values","url":"\/documentation\/the-swift-programming-language\/errorhandling#Converting-Errors-to-Optional-Values","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ErrorHandling#Converting-Errors-to-Optional-Values","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closure-Expressions":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/closures#Closure-Expressions","title":"Closure Expressions","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closure-Expressions","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Compound-Assignment-Operators":{"type":"topic","title":"Compound Assignment Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Compound-Assignment-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Compound-Assignment-Operators","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Variadic-Parameters":{"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Variadic-Parameters","title":"Variadic Parameters","type":"topic","url":"\/documentation\/the-swift-programming-language\/functions#Variadic-Parameters","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Special-Characters-in-String-Literals":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Special-Characters-in-String-Literals","title":"Special Characters in String Literals","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Special-Characters-in-String-Literals","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Actor-Declaration":{"type":"topic","title":"Actor Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Actor-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Actor-Declaration","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Custom-Operators":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Custom-Operators","title":"Custom Operators","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Custom-Operators","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Functions#Optional-Tuple-Return-Types":{"type":"topic","title":"Optional Tuple Return Types","url":"\/documentation\/the-swift-programming-language\/functions#Optional-Tuple-Return-Types","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Functions#Optional-Tuple-Return-Types","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Concurrency#Sendable-Types":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/concurrency#Sendable-Types","title":"Sendable Types","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Concurrency#Sendable-Types","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Metatype-Type":{"type":"topic","title":"Metatype Type","url":"\/documentation\/the-swift-programming-language\/types#Metatype-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Metatype-Type","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Throw-Statement":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Throw-Statement","title":"Throw Statement","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Throw-Statement","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#unchecked":{"type":"topic","title":"unchecked","url":"\/documentation\/the-swift-programming-language\/attributes#unchecked","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#unchecked","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Try-Operator":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Try-Operator","title":"Try Operator","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Try-Operator","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Defer-Statement":{"type":"topic","title":"Defer Statement","url":"\/documentation\/the-swift-programming-language\/statements#Defer-Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Defer-Statement","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Dictionary-Type-Shorthand-Syntax":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Dictionary-Type-Shorthand-Syntax","title":"Dictionary Type Shorthand Syntax","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Dictionary-Type-Shorthand-Syntax","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization":{"abstract":[{"text":"Set the initial values for a type’s stored properties and perform one-time setup.","type":"text"}],"kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization","role":"article","title":"Initialization","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/CollectionTypes#Sets":{"type":"topic","title":"Sets","url":"\/documentation\/the-swift-programming-language\/collectiontypes#Sets","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/CollectionTypes#Sets","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Equivalence-Operators":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Equivalence-Operators","abstract":[],"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Equivalence-Operators","title":"Equivalence Operators"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Patterns#Enumeration-Case-Pattern":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/patterns#Enumeration-Case-Pattern","title":"Enumeration Case Pattern","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Patterns#Enumeration-Case-Pattern","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-Grapheme-Clusters":{"type":"topic","title":"Extended Grapheme Clusters","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-Grapheme-Clusters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-Grapheme-Clusters","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Initializer-Parameters-Without-Argument-Labels":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/initialization#Initializer-Parameters-Without-Argument-Labels","title":"Initializer Parameters Without Argument Labels","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Initializer-Parameters-Without-Argument-Labels","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language":{"kind":"article","title":"The Swift Programming Language (5.9)","type":"topic","role":"collection","url":"\/documentation\/the-swift-programming-language","abstract":[],"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Overriding-a-Failable-Initializer":{"type":"topic","title":"Overriding a Failable Initializer","url":"\/documentation\/the-swift-programming-language\/initialization#Overriding-a-Failable-Initializer","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Overriding-a-Failable-Initializer","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#main":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#main","title":"main","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#main","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Declaration-Attributes":{"abstract":[],"kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/attributes#Declaration-Attributes","title":"Declaration Attributes","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Declaration-Attributes"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure":{"url":"\/documentation\/the-swift-programming-language\/lexicalstructure","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure","type":"topic","role":"article","abstract":[{"type":"text","text":"Use the lowest-level components of the syntax."}],"title":"Lexical Structure"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type":{"type":"topic","title":"Enumerations with Cases of a Raw-Value Type","url":"\/documentation\/the-swift-programming-language\/declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Enumerations-with-Cases-of-a-Raw-Value-Type","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Literal-Expression":{"abstract":[],"kind":"section","title":"Literal Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Literal-Expression","type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions#Literal-Expression"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/OptionalChaining#Accessing-Properties-Through-Optional-Chaining":{"url":"\/documentation\/the-swift-programming-language\/optionalchaining#Accessing-Properties-Through-Optional-Chaining","abstract":[],"type":"topic","title":"Accessing Properties Through Optional Chaining","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/OptionalChaining#Accessing-Properties-Through-Optional-Chaining","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types-with-a-Generic-Where-Clause":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types-with-a-Generic-Where-Clause","title":"Associated Types with a Generic Where Clause","abstract":[],"type":"topic","kind":"section","url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types-with-a-Generic-Where-Clause"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Repeat-While":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/controlflow#Repeat-While","title":"Repeat-While","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Repeat-While","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Optionals":{"kind":"section","title":"Optionals","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Optionals","type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Optionals","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Types#Function-Type":{"type":"topic","title":"Function Type","url":"\/documentation\/the-swift-programming-language\/types#Function-Type","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Types#Function-Type","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/LexicalStructure#Literals":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/lexicalstructure#Literals","title":"Literals","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/LexicalStructure#Literals","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/expressions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions","kind":"article","role":"article","title":"Expressions","abstract":[{"type":"text","text":"Access, modify, and assign values."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Checking-for-Protocol-Conformance":{"abstract":[],"kind":"section","type":"topic","title":"Checking for Protocol Conformance","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Checking-for-Protocol-Conformance","url":"\/documentation\/the-swift-programming-language\/protocols#Checking-for-Protocol-Conformance"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements":{"title":"Statements","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements","abstract":[{"type":"text","text":"Group expressions and control the flow of execution."}],"url":"\/documentation\/the-swift-programming-language\/statements","type":"topic","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics":{"identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics","role":"article","abstract":[{"text":"Write code that works for multiple types and specify requirements for those types.","type":"text"}],"kind":"article","url":"\/documentation\/the-swift-programming-language\/generics","type":"topic","title":"Generics"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/TheBasics#Type-Annotations":{"abstract":[],"kind":"section","type":"topic","url":"\/documentation\/the-swift-programming-language\/thebasics#Type-Annotations","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/TheBasics#Type-Annotations","title":"Type Annotations"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Property-Wrappers":{"type":"topic","title":"Property Wrappers","url":"\/documentation\/the-swift-programming-language\/properties#Property-Wrappers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Property-Wrappers","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Type-Casting-Operators":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Type-Casting-Operators","title":"Type-Casting Operators","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Type-Casting-Operators","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Break-Statement":{"abstract":[],"kind":"section","title":"Break Statement","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Break-Statement","type":"topic","url":"\/documentation\/the-swift-programming-language\/statements#Break-Statement"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Declaration":{"type":"topic","title":"Protocol Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Declaration","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Class-Only-Protocols":{"type":"topic","title":"Class-Only Protocols","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Class-Only-Protocols","url":"\/documentation\/the-swift-programming-language\/protocols#Class-Only-Protocols","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators":{"type":"topic","url":"\/documentation\/the-swift-programming-language\/advancedoperators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators","kind":"article","role":"article","title":"Advanced Operators","abstract":[{"type":"text","text":"Define custom operators, perform bitwise operations, and use builder syntax."}]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Properties#Shorthand-Getter-Declaration":{"type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Properties#Shorthand-Getter-Declaration","url":"\/documentation\/the-swift-programming-language\/properties#Shorthand-Getter-Declaration","abstract":[],"title":"Shorthand Getter Declaration","kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Value-Overflow":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Value-Overflow","title":"Value Overflow","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Value-Overflow","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/GenericParametersAndArguments":{"url":"\/documentation\/the-swift-programming-language\/genericparametersandarguments","kind":"article","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/GenericParametersAndArguments","type":"topic","role":"article","abstract":[{"type":"text","text":"Generalize declarations to abstract away concrete types."}],"title":"Generic Parameters and Arguments"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicMemberLookup":{"type":"topic","title":"dynamicMemberLookup","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicMemberLookup","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicMemberLookup","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Closures-Are-Reference-Types":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/closures#Closures-Are-Reference-Types","title":"Closures Are Reference Types","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Closures-Are-Reference-Types","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Key-Path-Expression":{"type":"topic","title":"Key-Path Expression","url":"\/documentation\/the-swift-programming-language\/expressions#Key-Path-Expression","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Key-Path-Expression","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Generics#Associated-Types":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/generics#Associated-Types","title":"Associated Types","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Generics#Associated-Types","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Initialization#Memberwise-Initializers-for-Structure-Types":{"kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Initialization#Memberwise-Initializers-for-Structure-Types","type":"topic","url":"\/documentation\/the-swift-programming-language\/initialization#Memberwise-Initializers-for-Structure-Types","abstract":[],"title":"Memberwise Initializers for Structure Types"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#Sendable":{"type":"topic","title":"Sendable","url":"\/documentation\/the-swift-programming-language\/attributes#Sendable","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#Sendable","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters":{"title":"Strings and Characters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters","abstract":[{"type":"text","text":"Store and manipulate text."}],"url":"\/documentation\/the-swift-programming-language\/stringsandcharacters","type":"topic","kind":"article","role":"article"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Enumerations#Iterating-over-Enumeration-Cases":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/enumerations#Iterating-over-Enumeration-Cases","title":"Iterating over Enumeration Cases","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Enumerations#Iterating-over-Enumeration-Cases","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Closures#Capturing-Values":{"title":"Capturing Values","url":"\/documentation\/the-swift-programming-language\/closures#Capturing-Values","kind":"section","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Closures#Capturing-Values","abstract":[],"type":"topic"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Protocol-Associated-Type-Declaration":{"type":"topic","title":"Protocol Associated Type Declaration","url":"\/documentation\/the-swift-programming-language\/declarations#Protocol-Associated-Type-Declaration","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Protocol-Associated-Type-Declaration","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Optional-Chaining-Expression":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Optional-Chaining-Expression","title":"Optional-Chaining Expression","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Optional-Chaining-Expression","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/StringsAndCharacters#Extended-String-Delimiters":{"type":"topic","title":"Extended String Delimiters","url":"\/documentation\/the-swift-programming-language\/stringsandcharacters#Extended-String-Delimiters","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/StringsAndCharacters#Extended-String-Delimiters","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels-for-Unit-Test-Targets":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels-for-Unit-Test-Targets","title":"Access Levels for Unit Test Targets","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels-for-Unit-Test-Targets","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Declarations#Declaration-Modifiers":{"type":"topic","title":"Declaration Modifiers","url":"\/documentation\/the-swift-programming-language\/declarations#Declaration-Modifiers","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Declarations#Declaration-Modifiers","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Statements#Conditional-Compilation-Block":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/statements#Conditional-Compilation-Block","title":"Conditional Compilation Block","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Statements#Conditional-Compilation-Block","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AutomaticReferenceCounting#Weak-References":{"type":"topic","title":"Weak References","url":"\/documentation\/the-swift-programming-language\/automaticreferencecounting#Weak-References","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AutomaticReferenceCounting#Weak-References","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/ControlFlow#Deferred-Actions":{"abstract":[],"type":"topic","url":"\/documentation\/the-swift-programming-language\/controlflow#Deferred-Actions","kind":"section","title":"Deferred Actions","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/ControlFlow#Deferred-Actions"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Expressions#Conditional-Expression":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/expressions#Conditional-Expression","title":"Conditional Expression","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Expressions#Conditional-Expression","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AdvancedOperators#Prefix-and-Postfix-Operators":{"type":"topic","title":"Prefix and Postfix Operators","url":"\/documentation\/the-swift-programming-language\/advancedoperators#Prefix-and-Postfix-Operators","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AdvancedOperators#Prefix-and-Postfix-Operators","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Attributes#dynamicCallable":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/attributes#dynamicCallable","title":"dynamicCallable","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Attributes#dynamicCallable","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Protocol-Composition":{"type":"topic","title":"Protocol Composition","url":"\/documentation\/the-swift-programming-language\/protocols#Protocol-Composition","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Protocol-Composition","abstract":[],"kind":"section"},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/Protocols#Failable-Initializer-Requirements":{"kind":"section","url":"\/documentation\/the-swift-programming-language\/protocols#Failable-Initializer-Requirements","title":"Failable Initializer Requirements","type":"topic","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/Protocols#Failable-Initializer-Requirements","abstract":[]},"doc://org.swift.tspl/documentation/The-Swift-Programming-Language/AccessControl#Access-Levels":{"type":"topic","title":"Access Levels","url":"\/documentation\/the-swift-programming-language\/accesscontrol#Access-Levels","identifier":"doc:\/\/org.swift.tspl\/documentation\/The-Swift-Programming-Language\/AccessControl#Access-Levels","abstract":[],"kind":"section"}}}